<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	                    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
	                    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
	                    http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">

    <context:spring-configured>Spring Configured Example</context:spring-configured>
    <context:annotation-config />
    <context:component-scan base-package="com.alibaba.rfsc">
        <context:include-filter type="annotation" expression="javax.jws.WebService" />
        <context:exclude-filter type="regex" expression=".+com/sun/.+/util/.*" />
    </context:component-scan>

    <context:property-placeholder location="classpath:config.properties" />

    <util:list id="defaultList" list-class="java.util.ArrayList" scope="singleton" value-type="java.lang.String">
        <value>James</value><value>Peter</value><value>Andy</value><value>Vensent</value><value>Feigo</value><value>Frank</value>
    </util:list>

    <util:set id="defaultSet" set-class="java.util.HashSet" scope="singleton" value-type="java.lang.String">
        <value>James</value>
        <value>Peter</value>
        <value>Andy</value>
        <value>Vensent</value>
        <value>Feigo</value>
        <value>Frank</value>
    </util:set>

    <util:map id="defaultMap" key-type="java.lang.Integer" value-type="java.lang.String" scope="singleton" map-class="java.util.concurrent.ConcurrentHashMap">
        <entry key="1" value="James" />
        <entry key="2" value="Peter" />
        <entry key="3" value="Frank" />
    </util:map>

    <bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10" />
        <property name="maxPoolSize" value="100" />
        <property name="queueCapacity" value="500" />
    </bean>


    <bean id="bizObject" class="com.alibaba.rfsc.cron.PoolingTask" />

    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="bizObject" />
        <property name="targetMethod" value="doBiz" />
    </bean>

    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="jobDetail" />
        <property name="cronExpression" value="0/1 * * * * ?" />
        <property name="group" value="Hello" />
    </bean>

    <bean id="taskTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="jobDetail" />
        <property name="startDelay" value="10000" />
        <property name="repeatInterval" value="60000" />
    </bean>

    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>
        <property name="taskExecutor" ref="executor" />
    </bean>

    <!--
        <context:load-time-weaver aspectj-weaving="autodetect" weaver-class="org.springframework.context.weaving.DefaultContextLoadTimeWeaver" />
        <context:mbean-export registration="failOnExisting" default-domain="apple" server="mbserver" />
        <context:mbean-server id="mbserver" agent-id="mbagent" />
     -->

    <!--
        <task:annotation-driven executor="taskExecutor" mode="aspectj" proxy-target-class="true" scheduler="taskScheduler" />
        <task:scheduler id="taskScheduler" pool-size="5" />
        <task:executor id="taskExecutor" keep-alive="60000" pool-size="10" queue-capacity="50" rejection-policy="DISCARD" />

        in annotation-driven, taskScheduler is set for @Scheduled and taskExecutor is set for @Async.
        <task:scheduled-tasks scheduler="taskScheduler">
            <task:scheduled ref="defaultFileMonitor" method="scanAll" fixed-delay="5000" />
        </task:scheduled-tasks>
     -->

</beans>


